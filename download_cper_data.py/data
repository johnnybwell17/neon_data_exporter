import os
import requests
import pandas as pd
from tqdm import tqdm

# Replace this with your actual token
API_TOKEN = os.getenv("NEON_API_TOKEN")
if not API_TOKEN:
    raise ValueError("Missing NEON_API_TOKEN in .env")

SITE = "CPER"  # Central Plains Experimental Range

# Add headers for authentication
HEADERS = {
    'X-API-Token': API_TOKEN
}

# Base URL
BASE_URL = "https://data.neonscience.org/api/v0"

# Example list of data products (we'll expand this soon)
DATA_PRODUCTS = {
    "DP1.00094.001": "Soil temperature",
    "DP1.00066.001": "Soil water content and salinity",
    "DP1.00041.001": "PAR",
    "DP1.00023.001": "Barometric pressure",
    "DP1.00024.001": "Relative humidity and temperature",
}

# Pull available months for a given product
def get_months(product):
    url = f"{BASE_URL}/products/{product}"
    r = requests.get(url, headers=HEADERS)
    if r.ok:
        all_sites = r.json()['data']['siteCodes']
        for site_entry in all_sites:
            if site_entry['siteCode'] == SITE:
                return site_entry['availableMonths']
        print(f"No data found for site {SITE}")
        return []
    else:
        print(f"Failed to get months for {product}")
        print("Status code:", r.status_code)
        print("Response:", r.text)
        return []



# Download data for all months
def download_product(product):
    months = get_months(product)
    for month in tqdm(months, desc=f"Downloading {product}"):
        url = f"{BASE_URL}/data/{product}/{SITE}/{month}"
        r = requests.get(url, headers=HEADERS)
        if r.ok:
            for f in r.json()['data']['files']:
                if f['name'].endswith('.csv'):
                    file_url = f['url']
                    filename = f['name']
                    file_data = requests.get(file_url, headers=HEADERS)
                    with open(filename, 'wb') as out:
                        out.write(file_data.content)
        else:
            print(f"Failed to download {product} {month}")

# Main loop
for product_id, product_name in DATA_PRODUCTS.items():
    print(f"\nProcessing: {product_name} ({product_id})")
    download_product(product_id)
